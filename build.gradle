plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.30-M1' apply false
    id "com.github.johnrengelman.shadow" version "5.2.0" apply false
}

group = 'ru.cristalix'
version = "1.6.3-dev"
//sourceCompatibility = 1.8

subprojects {

    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "com.github.johnrengelman.shadow"

    ext.coreDependencies = {
        dependencies {
            implementation "org.jetbrains.exposed:exposed-core:0.28.1"
            implementation "org.jetbrains.exposed:exposed-jdbc:0.28.1"
            implementation "com.zaxxer:HikariCP:3.4.5"
            implementation "mysql:mysql-connector-java:8.0.20"
        }
    }

    ext.projectVersion = "1.6.3-dev"

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://papermc.io/repo/repository/maven-public/' }
        maven { url 'http://repo.citizensnpcs.co/' }
    }

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-cbor:0.20.0"
        implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.10"
        implementation 'me.stepbystep:MinigameAPI:1.1'
        implementation 'me.stepbystep:API:1.0'
        compileOnly 'com.destroystokyo.paper:paper-api:1.12.2-R0.1-SNAPSHOT'
        compileOnly "ru.cristalix:kasdospigot:1.12.2"
        compileOnly 'net.citizensnpcs:citizensapi:2.0.26-SNAPSHOT'
        compileOnly 'ru.cristalix:api:1.0.4'
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = [
                    "-Xopt-in=kotlin.RequiresOptIn",
                    "-Xopt-in=kotlin.time.ExperimentalTime",
                    "-Xopt-in=kotlin.ExperimentalStdlibApi",
                    "-Xjvm-default=enable"
            ]
        }
    }

    processResources {
        outputs.upToDateWhen { false }
        filesMatching('**/plugin.yml') {
            filter {
                it.replace('$projectVersion', projectVersion)
            }
        }
    }
}
